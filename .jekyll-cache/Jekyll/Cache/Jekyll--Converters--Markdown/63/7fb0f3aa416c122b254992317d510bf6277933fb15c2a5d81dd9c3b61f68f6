I"„<p><a href="https://www.kickstarter.com/projects/1751759988/sicp-distilled">SICP Distilled</a>
is one of the most interesting Kickstarter projects Iâ€™ve seen in a
while.</p>

<p>Its creator <a href="http://www.thattommyhall.com/">Tom Hall</a> is
planning to create some nice companion resources for <a href="http://sicpebook.wordpress.com/">SICP</a> with code
examples in Clojure. In his own words:</p>

<blockquote>
  <p>Itâ€™s a long book, with lots
of exercises and lots of people I know have started, loved it, but
somehow not finished.</p>

  <p>Abelson and Sussman themselves highlight the important lessons of SICP
in their paper <code class="language-plaintext highlighter-rouge">Lisp: A Language For Stratified Design</code> and I have my
own favourite bits.</p>

  <p>As the book itself is available online for free I want to make the
perfect accompaniment to it - an ebook summarising the key ideas,
short videos describing them, screencasts of solving some of the
exercises, translation of the examples into Clojure, example projects,
partial solutions for you to complete (similar to <code class="language-plaintext highlighter-rouge">4clojure</code> and <code class="language-plaintext highlighter-rouge">Clojure
koans</code>) and a place to discuss solving them with people and hopefully
keep momentum and get it finished!</p>

  <p>Something to be enjoyed alongside SICP, rather than completely replace it.</p>

  <p>Maybe some ideas come out a little different in Clojure, or I take a
slightly novel approach (hence idiosyncratic), maybe I miss something
out (hence tour, sorry), but I hope we can have some fun along the
way.</p>

  <p>â€“ Tom Hall, SICP Distilled</p>
</blockquote>

<p>Iâ€™m one of those many people who never did finish SICP (although I
hope to do that some day), so I can totally relate to Tomâ€™s
words. Iâ€™ve already backed his campaign and I hope more of you will do
the same!</p>
:ET