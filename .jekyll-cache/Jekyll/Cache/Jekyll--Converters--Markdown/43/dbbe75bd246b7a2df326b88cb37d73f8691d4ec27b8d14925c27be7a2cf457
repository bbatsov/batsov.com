I"‚<p><a href="https://github.com/rubocop-hq/rubocop">RuboCop</a> 0.9 is finally out! This
was one of our most ambitious releases - over a month of work, ~250
commits, lots of new cops and features and a lot less bugs.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup> Hereâ€™s the
highlights.</p>

<h2 id="portable-linting">Portable Linting</h2>

<p>This is a big deal! Prior to 0.9, RuboCop piggybacked on MRIâ€™s <code class="language-plaintext highlighter-rouge">ruby
-wc</code> to find syntax errors and lint warnings. Obviously apart from
being unportable - this wasnâ€™t particularly fast (spawning processes
never is) either.</p>

<p>Thatâ€™s no longer the case - errors are now reported directly by
<a href="https://github.com/whitequark/parser">Parser</a> and weâ€™ve reimplemented
MRIâ€™s linting in pure Ruby into RuboCop itself. Now youâ€™ll get the
same errors and warnings on MRI, JRuby and Rubinius. And to top it
off - weâ€™ve added much nicer warning messages and we report even
column information for those (MRI doesnâ€™t). This brings me to the next
point.</p>

<h2 id="column-information">Column information</h2>

<p>All RuboCop diagnostics now feature column information as well. Now
youâ€™ll be able to jump to a problem in your code even faster. But thatâ€™s not allâ€¦</p>

<h2 id="formatter-support">Formatter Support</h2>

<p>Weâ€™ve introduced the concept of formatters (similar the to RSpec
formatter concept) and weâ€™ve bundled a few formatters. Weâ€™ve also
changed the default output format - it now pretty similar to <code class="language-plaintext highlighter-rouge">clang</code>â€™s
and features extra context information:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>spec/models/authentication_spec.rb:12:44: W: `-' interpreted as argument prefix
    }.to change(Authentication, :count).by -1
                                           ^
</code></pre></div></div>

<p>Iâ€™m pretty sure most of you will love this!</p>

<h2 id="auto-correction-support">Auto-correction Support</h2>

<p>Running <code class="language-plaintext highlighter-rouge">rubocop -a</code> will now correct certain problems automatically. This
feature is alpha quality and just a few cops have support for it right
now. It goes without saying that you shouldnâ€™t use it on projects not under
version control (who doesnâ€™t use version control?) and without
an excellent test suite (that you undoubtedly have).</p>

<h2 id="rails-support">Rails Support</h2>

<p><code class="language-plaintext highlighter-rouge">rubocop -R</code> will run additional Rails specific code checks. This
feature is also alpha at this point (meaning thereâ€™s just one Rails
specific check at this point).</p>

<h2 id="the-road-to-10">The Road to 1.0</h2>

<p>We plan 1.0 to be the next RuboCop major release. No new features are in
the pipeline for 1.0 - we already have so many features that require extra
work and polish anyways. If all goes well expect 1.0 by summerâ€™s end with:</p>

<ul>
  <li>performance optimizations</li>
  <li>refined formatters</li>
  <li>enhanced auto-correction support</li>
  <li>lots of Rails specific checks</li>
</ul>

<p>I hope youâ€™ll enjoy RuboCop 0.9. For the gory details, please take a
look at the epic
<a href="https://github.com/rubocop-hq/rubocop/blob/master/CHANGELOG.md#090-2013-07-01">Changelog</a>.</p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>OK, Iâ€™m not sure about this, but I sincerely hope itâ€™s true.Â <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET