I"ð<p>I often see people writing code like this:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">x</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">...</span>
</code></pre></div></div>

<p>Obviously <code class="language-plaintext highlighter-rouge">Fixnum#even?</code> would have been a better choice:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">x</span><span class="p">.</span><span class="nf">even?</span> <span class="o">...</span>
</code></pre></div></div>

<p>There is also <code class="language-plaintext highlighter-rouge">Fixnum#odd?</code> if you need to check for odd numbers.</p>

<p>By the way, there is even a <code class="language-plaintext highlighter-rouge">Numeric#zero?</code> predicate:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">...</span>

<span class="c1"># same as the above (provided x is a number)</span>
<span class="k">if</span> <span class="n">x</span><span class="p">.</span><span class="nf">zero?</span> <span class="o">...</span>
</code></pre></div></div>

<p>Personally I feel that <code class="language-plaintext highlighter-rouge">x == 0</code> makes more sense for such simple
numeric checks, but <code class="language-plaintext highlighter-rouge">zero?</code> is there for those you who think
otherwise. <code class="language-plaintext highlighter-rouge">x == 0</code> also has the benefit of being <code class="language-plaintext highlighter-rouge">nil</code> safe, but
thatâ€™s not of significant importance.</p>

<p>The <a href="https://github.com/bbatsov/powerpack">Powerpack library</a> also
includes the predicate methods <code class="language-plaintext highlighter-rouge">Fixnum#pos?</code> and <code class="language-plaintext highlighter-rouge">Fixnum#neg?</code>, which
are roughly the same as <code class="language-plaintext highlighter-rouge">&gt; 0</code> and <code class="language-plaintext highlighter-rouge">&lt; 0</code> comparisons.</p>

<p>Another bit of code youâ€™ll often see is:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">7</span> <span class="o">...</span>
</code></pre></div></div>

<p>While there is nothing particularly bad about that code, Iâ€™d argue
that <code class="language-plaintext highlighter-rouge">between?</code> makes for a nicer (and more OO) alternative:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">x</span><span class="p">.</span><span class="nf">between?</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="o">...</span>
</code></pre></div></div>

<p>Using a range predicate you can also exclude the end value:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1000</span> <span class="o">...</span>

<span class="c1"># is the same as</span>
<span class="k">if</span> <span class="p">(</span><span class="mi">1</span><span class="o">...</span><span class="mi">1000</span><span class="p">).</span><span class="nf">include?</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">...</span>
</code></pre></div></div>

<p>When using predicate methods you should be mindful of <code class="language-plaintext highlighter-rouge">nil</code>
receivers. Thatâ€™s generally not a serious issue in practice but still Iâ€™d ask
you to consider this example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">arr</span> <span class="o">==</span> <span class="p">[]</span> <span class="o">...</span>
</code></pre></div></div>

<p>Itâ€™s not equivalent to</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">arr</span><span class="p">.</span><span class="nf">empty?</span>
</code></pre></div></div>

<p>Why so? Because <code class="language-plaintext highlighter-rouge">arr</code> might be <code class="language-plaintext highlighter-rouge">nil</code>. So the equivalent code would be:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="o">!</span><span class="n">arr</span><span class="p">.</span><span class="nf">nil?</span> <span class="o">&amp;&amp;</span> <span class="n">arr</span><span class="p">.</span><span class="nf">empty?</span>
</code></pre></div></div>

<p>Of course checking for <code class="language-plaintext highlighter-rouge">nil</code>s like this is generally not a good idea, but
thatâ€™s a discussion for some other time.</p>

<p>On a somewhat related note <code class="language-plaintext highlighter-rouge">something.nil?</code> is generally preferred
over <code class="language-plaintext highlighter-rouge">something == nil</code>. If youâ€™re reasonably sure that <code class="language-plaintext highlighter-rouge">something</code>
canâ€™t have the value <code class="language-plaintext highlighter-rouge">false</code> you can, of course, simplify things even
further:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">something</span> <span class="o">...</span>
</code></pre></div></div>

<p>As usual Iâ€™m looking forward to hearing your thoughts here and on
<a href="http://twitter.com/bbatsov">Twitter</a>!</p>
:ET