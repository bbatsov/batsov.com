I"ˆ <h2 id="prelude">Prelude</h2>

<p>In this article Iâ€™ll share with you a few tips and tricks about
running Emacs under the Mac OS X operating system.</p>

<h2 id="installation">Installation</h2>

<p>While Emacs is available for installation from
<a href="http://wikemacs.org/wiki/Installing_Emacs_on_OS_X">various sources</a>
I personally recommend you to use the
<a href="http://wikemacs.org/wiki/Installing_Emacs_on_OS_X">Emacs for Mac OS X binary distribution</a>.</p>

<p>Installation via Homebrew is also a decent option, although it more time consuming.</p>

<p>After the installation you might want to wipe out the ancient Emacs 22
that ships with OS X by default(its presence will only cause headaches, trust me):</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo rm</span> /usr/bin/emacs
<span class="nv">$ </span><span class="nb">sudo rm</span> <span class="nt">-rf</span> /usr/share/emacs
</code></pre></div></div>

<p>Keep in mind that the OS X updates will (unfortunately) bring Emacs 22 back from the dead, so
you might consider altering your <code class="language-plaintext highlighter-rouge">PATH</code> instead.</p>

<p>Alternatively you can just create an alias in your shell and when you
invoke <code class="language-plaintext highlighter-rouge">emacs</code> it will run the newly installed version:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">alias </span><span class="nv">emacs</span><span class="o">=</span><span class="s2">"/Applications/Emacs.app/Contents/MacOS/Emacs"</span>
</code></pre></div></div>

<p>If you installed via Homebrew that path might look like this:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">alias </span><span class="nv">emacs</span><span class="o">=</span><span class="s2">"/usr/local/Cellar/emacs/24.2/Emacs.app/Contents/MacOS/Emacs -nw"</span>
</code></pre></div></div>

<p>To make it permanent, if using bash, add that line to
<code class="language-plaintext highlighter-rouge">~/.bash_profile</code>. zsh users will want to update <code class="language-plaintext highlighter-rouge">~/.zshrc</code> instead.</p>

<h2 id="full-screen-support">Full-screen support</h2>

<p>The Homebrew Emacs formula includes a patch providing the <code class="language-plaintext highlighter-rouge">M-x
ns-toggle-fullscreen</code> command for switching between normal and
full-screen modes. It works well, but does not provide the typical OS
X Lion full-screen app experience. In particular, it remains on the
desktop, obscuring non-full-screen applications, rather than moving to
its own space. For OS X Lion style fullscreen support have a look at
this
<a href="http://sourcematters.org/2012/04/10/full-screen-emacs-24-for-os-x-lion.html">article</a>.</p>

<p>Another option that you might want to explore is
the <a href="http://osxdaily.com/2011/07/22/enable-full-screen-support-all-apps-os-x-lion-maximizer/">maximizer</a>
utility that brings full-screen support for all Cocoa apps under Lion.</p>

<h2 id="keybindings">Keybindings</h2>

<p>I heartily recommend you to remap your <em>Caps Lock</em> key to <em>Control</em>. This
can be easily done via <em>Preferences -&gt; Keyboard -&gt; Modifier Keys</em>. If
youâ€™re using a laptop keyboard or the bluetooth keyboard youâ€™ll
definitely want to remap your right Option key to Control as
well. No one can use effectively Emacs without a right Control
key. Remapping it is a bit more involved and requires the use of the
third-party utility
<a href="http://pqrs.org/macosx/keyremap4macbook/">KeyRemap4MacBook</a>.</p>

<p>On a regular Mac keyboard youâ€™ll probably want to map Command to Meta
and Option to Super. On an external Windows keyboard youâ€™ll want to
map Command to Super and Option to Meta (on Windows keyboard the
Command and Option keys are swapped). Add this to your <code class="language-plaintext highlighter-rouge">init.el</code> (or
<code class="language-plaintext highlighter-rouge">.emacs</code>) file:</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">setq</span> <span class="nv">mac-command-modifier</span> <span class="ss">'super</span><span class="p">)</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">mac-option-modifier</span> <span class="ss">'meta</span><span class="p">)</span>
</code></pre></div></div>

<p>If you often switch between your laptop keyboard and an external
Windows keyboard (like me) you might want to define this helper
command and bind it to some key combo (<code class="language-plaintext highlighter-rouge">C-c w</code> in the example):</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">swap-meta-and-super</span> <span class="p">()</span>
  <span class="s">"Swap the mapping of meta and super. Very useful for people using their Mac
with a Windows external keyboard from time to time."</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">eq</span> <span class="nv">mac-command-modifier</span> <span class="ss">'super</span><span class="p">)</span>
      <span class="p">(</span><span class="k">progn</span>
        <span class="p">(</span><span class="k">setq</span> <span class="nv">mac-command-modifier</span> <span class="ss">'meta</span><span class="p">)</span>
        <span class="p">(</span><span class="k">setq</span> <span class="nv">mac-option-modifier</span> <span class="ss">'super</span><span class="p">)</span>
        <span class="p">(</span><span class="nv">message</span> <span class="s">"Command is now bound to META and Option is bound to SUPER."</span><span class="p">))</span>
    <span class="p">(</span><span class="k">progn</span>
      <span class="p">(</span><span class="k">setq</span> <span class="nv">mac-command-modifier</span> <span class="ss">'super</span><span class="p">)</span>
      <span class="p">(</span><span class="k">setq</span> <span class="nv">mac-option-modifier</span> <span class="ss">'meta</span><span class="p">)</span>
      <span class="p">(</span><span class="nv">message</span> <span class="s">"Command is now bound to SUPER and Option is bound to META."</span><span class="p">))))</span>

<span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">"C-c w"</span><span class="p">)</span> <span class="ss">'swap-meta-and-super</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="setting-the-path-variable">Setting the PATH variable</h2>

<p>Long story short - if youâ€™re running Emacs from Spotlight (or any
other launcher for that matter) your <code class="language-plaintext highlighter-rouge">PATH</code> and <code class="language-plaintext highlighter-rouge">exec-path</code> variables
wonâ€™t be same as the ones in your shell (and thatâ€™s every nasty since
you want be able to run some external programs from Emacs). The best
way to handle this would be installing the package
<a href="https://github.com/purcell/exec-path-from-shell">exec-path-from-shell</a>
by Steve Purcell.</p>

<h2 id="flyspell">Flyspell</h2>

<p>For flyspell to work correctly youâ€™ll need to install aspell plus a few dictionaries.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>brew <span class="nb">install </span>aspell <span class="nt">--lang</span><span class="o">=</span>en
</code></pre></div></div>

<h2 id="more-goodies">More goodies</h2>

<p>If you want to spare yourself part of the headache of configuring
Emacs on OS X and get a lot of extra firepower you might want to install
<a href="https://github.com/bbatsov/prelude">Emacs Prelude</a> - an enhanced
Emacs 24.x configuration (developed by yours truly) that should make
your experience with Emacs both more pleasant and more powerful.</p>
:ET